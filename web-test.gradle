sourceSets {
    webTest {
        java {
            srcDir(file('src/webTest/java'))
        }
        resources {
            srcDir(file('src/webTest/resources'))
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += sourceSets.main.output + compileClasspath
    }
}

dependencies {
    webTestImplementation(
            'io.github.bonigarcia:webdrivermanager:5.9.2',
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test',
            'org.junit.jupiter:junit-jupiter-api:5.11.2',
            'org.junit.jupiter:junit-jupiter-params:5.11.2'
    )

    webTestRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.11.2'
    )
}

tasks.register('generateWebTestSources', Copy) {
    from("src/webTest/java")
    exclude("**/sherlock/deprecated/**")
    into(layout.buildDirectory.dir("tmp/src/webTest/java"))
}

sourceSets {
    webTest {
        java {
            srcDirs = [layout.buildDirectory.dir("tmp/src/webTest/java").get().asFile]
        }
    }
}

tasks.named('compileWebTestJava') {
    dependsOn(tasks.named('generateWebTestSources'))
}

tasks.register('webTest', Test) {
    description = 'Runs web tests.'
    group = 'verification'
    
    useJUnitPlatform()
    
    testClassesDirs = sourceSets.webTest.output.classesDirs
    classpath = sourceSets.webTest.runtimeClasspath
    shouldRunAfter(tasks.named('test'))
    
    doFirst {
        delete('screenshots')
    }
}